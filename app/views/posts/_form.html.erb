<%= form_with(model: post, local: true, html: { multipart: true, class: "card p-4 shadow-sm" }) do |form| %>
  <% if post.errors.any? %>
    <div class="alert alert-danger">
      <h4><%= pluralize(post.errors.count, "error") %> prohibited this post from being saved:</h4>
      <ul>
        <% post.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-3">
    <%= form.label :title, class: "form-label" %>
    <%= form.text_field :title, class: "form-control" %>
  </div>

  <div class="mb-3">
    <%= form.label :content, class: "form-label" %>
    <%= form.text_area :content, class: "form-control", rows: 5 %>
  </div>

  <div class="mb-4">
    <%= form.label :images, "Upload Images (you can select multiple)", class: "form-label" %>
    <%= form.file_field :images, multiple: true, direct_upload: true, class: "form-control" %>
    <div id="image-preview" class="row mt-3"></div>
  </div>
  <% if post.images.attached? %>
    <p class="mt-3"><strong>Current Images:</strong></p>
    <div class="row row-cols-1 row-cols-md-2 g-3">
      <% post.images.each do |image| %>
        <div class="col">
          <div class="position-relative d-inline-block">
            <%= image_tag image.variant(resize_to_limit: [300, 200]), class: "img-thumbnail" %>
            <%= button_to "❌", delete_image_post_path(@post, image_id: image.id),
              method: :delete,
              form: { data: { turbo_confirm: "Are you sure you want to delete this image?" } },
              class: "btn btn-sm btn-danger position-absolute top-0 end-0 m-1" %>
          </div>
        </div>
      <% end %>
    </div>
  <% end %>


  <div>
    <%= form.submit class: "btn btn-success" %>
  </div>
<% end %>
 
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const input = document.querySelector('input[type="file"][multiple]');
    const previewContainer = document.getElementById("image-preview");

    if (input) {
      input.addEventListener("change", () => {
        previewContainer.innerHTML = ""; // Clear previous previews
        Array.from(input.files).forEach(file => {
          if (!file.type.startsWith("image/")) return;

          const reader = new FileReader();
          reader.onload = (e) => {
            const col = document.createElement("div");
            col.className = "col-md-3 mb-3";

            const img = document.createElement("img");
            img.src = e.target.result;
            img.className = "img-fluid rounded shadow-sm";

            col.appendChild(img);
            previewContainer.appendChild(col);
          };
          reader.readAsDataURL(file);
        });
      });
    }
  });
</script>
